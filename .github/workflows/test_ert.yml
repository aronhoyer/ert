on:
  workflow_call:
    inputs:
      os:
        type: string
      python-version:
        type: string
      test-type:
        type: string
jobs:

  tests-ert:
    name: Run ert tests
    timeout-minutes: 30
    runs-on: ${{ inputs.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
        lfs: true

    - uses: actions/setup-python@v4
      id: setup_python
      with:
        python-version: ${{ inputs.python-version }}
        cache: "pip"
        cache-dependency-path: |
          setup.py
          pyproject.toml
          dev-requirements.txt

    - name: Get wheels
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.os }} Python ${{ inputs.python-version }} wheel

    - name: Install wheel
      run: |
        find . -name "*.whl" -exec pip install {} \;

    - name: Install dependencies
      run: pip install -r dev-requirements.txt

    - name: Test GUI
      if: inputs.test-type == 'gui-test'
      timeout-minutes: 10
      run: |
        pytest tests --junit-xml=junit.xml -sv --mpl -m "requires_window_manager" --benchmark-disable

    - name: Unit Test
      if: inputs.test-type == 'unit-tests'
      run: |
        pytest tests --junit-xml=junit.xml -n4 --show-capture=stderr -sv -m "not integration_test and not requires_window_manager" --benchmark-disable --dist loadgroup

    - name: Integration Test
      if: inputs.test-type == 'integration-tests'
      run: |
        pytest tests --junit-xml=junit.xml -n4 --show-capture=stderr -sv -m "integration_test and not requires_window_manager" --benchmark-disable

    - name: Test for a clean repository
      run: |
        # Run this before the 'Test CLI' entry below, which produces a few files that are accepted for now. Exclude the wheel.
        git status --porcelain | sed '/ert.*.whl$\|\/block_storage$/d'
        test -z "$(git status --porcelain | sed '/ert.*.whl$\\|\\/block_storage$/d')"

    - uses: test-summary/action@v2.1
      with:
        paths: junit.xml
      if: always()

    - name: Test CLI
      run: |
        ert --help
